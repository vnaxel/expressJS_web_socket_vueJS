{"ast":null,"code":"import PublicationItem from \"./PublicationItem.vue\";\nimport AddPublication from \"./AddPublication.vue\";\nimport SearchPublications from \"./SearchPublications.vue\";\nexport default {\n  name: \"PublicationsList\",\n  components: {\n    AddPublication,\n    SearchPublications,\n    PublicationItem\n  },\n\n  data() {\n    return {\n      publications: {},\n      publishMode: false,\n      resultats: 0\n    };\n  },\n\n  beforeMount() {\n    this.getPublications();\n  },\n\n  methods: {\n    getPublications() {\n      fetch(\"localhost:5000/api/publications\").then(res => res.json()).then(publications => {\n        this.publications = publications.data.reverse();\n        this.resultats = publications.data.length;\n      });\n    },\n\n    searchPublications(search) {\n      fetch(`localhost:5000/api/publications/query?search=${search}`).then(res => res.json()).then(publications => {\n        if (!publications.success) {\n          console.log(publications);\n        } else {\n          this.publications = publications.data.reverse();\n          this.resultats = publications.data.length;\n        }\n      });\n    },\n\n    addPublication(postBody) {\n      const options = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          content: postBody\n        })\n      };\n      fetch(\"localhost:5000/api/publications\", options).then(res => res.json()).then(res => {\n        if (!res.success) {\n          console.log(res.msg);\n        } else {\n          this.getPublications();\n        }\n      }).catch(error => console.log(error));\n    },\n\n    editPublication(id, postBody) {\n      const options = {\n        method: \"PATCH\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          content: postBody\n        })\n      };\n      fetch(`localhost:5000/api/publications/${id}`, options).then(res => res.json()).then(res => {\n        if (!res.success) {\n          console.log(res.msg);\n        } else {\n          this.getPublications();\n        }\n      }).catch(error => console.log(error));\n    },\n\n    deletePublication(id) {\n      const options = {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n      };\n      fetch(`localhost:5000/api/publications/${id}`, options).then(res => res.json()).then(res => {\n        if (!res.success) {\n          console.log(res.msg);\n        }\n\n        this.getPublications();\n      }).catch(error => console.log(error));\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["PublicationItem","AddPublication","SearchPublications","name","components","data","publications","publishMode","resultats","beforeMount","getPublications","methods","fetch","then","res","json","reverse","length","searchPublications","search","success","console","log","addPublication","postBody","options","method","headers","Accept","body","JSON","stringify","content","msg","catch","error","editPublication","id","deletePublication"],"sourceRoot":"","sources":["C:\\Users\\yveno\\Desktop\\projet-posts - vue frontend\\front\\src\\components\\PublicationsList.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<SearchPublications v-if=\"!publishMode\" @searchPublications=\"searchPublications\" @togglePublish=\"publishMode=true\" :resultats=\"this.resultats\"/>\r\n\t\t<AddPublication v-if=\"publishMode\" @addPublication=\"addPublication\" @togglePublish=\"publishMode=false\"/>\r\n\t\t<PublicationItem\r\n\t\t\tv-for=\"publication in publications\"\r\n\t\t\t:publication=\"publication\"\r\n\t\t\t:key=\"publication._id\"\r\n\t\t\t@deletePublication=\"deletePublication(publication._id)\"\r\n            @editPublication=\"editPublication\"\r\n\t\t></PublicationItem>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport PublicationItem from \"./PublicationItem.vue\";\r\n\timport AddPublication from \"./AddPublication.vue\";\r\n    import SearchPublications from \"./SearchPublications.vue\"\r\n\texport default {\r\n\t\tname: \"PublicationsList\",\r\n\t\tcomponents: {\r\n\t\t\tAddPublication,\r\n            SearchPublications,\r\n\t\t\tPublicationItem,\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tpublications: {},\r\n\t\t\t\tpublishMode: false,\r\n\t\t\t\tresultats: 0,\r\n\t\t\t};\r\n\t\t},\r\n\t\tbeforeMount() {\r\n\t\t\tthis.getPublications();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetPublications() {\r\n\t\t\t\tfetch(\"localhost:5000/api/publications\")\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t(publications) => {\r\n\t\t\t\t\t\t\tthis.publications = publications.data.reverse()\r\n\t\t\t\t\t\t\tthis.resultats = publications.data.length\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsearchPublications(search) {\r\n\t\t\t\tfetch(`localhost:5000/api/publications/query?search=${search}`)\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t(publications) => {\r\n\t\t\t\t\t\t\tif (!publications.success) {\r\n\t\t\t\t\t\t\t\tconsole.log(publications);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.publications = publications.data.reverse()\r\n\t\t\t\t\t\t\t\tthis.resultats = publications.data.length\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\taddPublication(postBody) {\r\n\t\t\t\tconst options = {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json;charset=UTF-8\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tcontent: postBody,\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\t\t\tfetch(\"localhost:5000/api/publications\", options)\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (!res.success) {\r\n\t\t\t\t\t\t\tconsole.log(res.msg);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.getPublications();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => console.log(error));\r\n\t\t\t},\r\n\r\n            editPublication(id, postBody) {\r\n\t\t\t\tconst options = {\r\n\t\t\t\t\tmethod: \"PATCH\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json;charset=UTF-8\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tcontent: postBody,\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\t\t\tfetch(`localhost:5000/api/publications/${id}`, options)\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (!res.success) {\r\n\t\t\t\t\t\t\tconsole.log(res.msg);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.getPublications();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => console.log(error));\r\n\t\t\t},\r\n\r\n\t\t\tdeletePublication(id) {\r\n\t\t\t\tconst options = {\r\n\t\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json;charset=UTF-8\",\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tfetch(`localhost:5000/api/publications/${id}`, options)\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (!res.success) {\r\n\t\t\t\t\t\t\tconsole.log(res.msg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.getPublications();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => console.log(error));\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}